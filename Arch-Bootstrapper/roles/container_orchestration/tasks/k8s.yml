---
- name: Loading the kernel modules overlay and br_netfilter
  ansible.builtin.lineinfile:
    dest: /etc/modules-load.d/k8s.conf
    state: present
    line: "{{ item }}"
  with_items:
    - overlay
    - br_netfilter

- name: Module parameters supplied
  ansible.builtin.lineinfile:
    dest: /etc/sysctl.d/k8s.conf
    state: present
    line: "{{ item }}"
  with_items:
    - net.bridge.bridge-nf-call-iptables  = 1
    - net.bridge.bridge-nf-call-ip6tables = 1
    - net.ipv4.ip_forward                 = 1

- name: Enable containerd service
  ansible.builtin.service:
    name: containerd
    state: started
    enabled: true

- name: Disable systemd swap
  ansible.builtin.template:
    src: noswap.service.j2
    dest: /etc/systemd/system/noswap.service
    owner: root
    group: root
    mode: '0644'
  notify:
    - Enable noswap service

- name: Check that the /etc/containerd/config.toml
  ansible.builtin.stat:
    path: /etc/containerd/config.toml
  register: containerd_stat
  failed_when: containerd_stat.stat.exists

- name: /etc/containerd/config.toml does not exist
  when: not containerd_stat.stat.exists
  ansible.builtin.shell:
    "containerd config default > /etc/containerd/config.toml"
  register: output
  changed_when: output.rc != 0
  notify:
    - Restart containerd service

- name: Restart containerd service
  ansible.builtin.service:
    name: containerd
    state: restarted

- name: Make directory .kube in $HOME to initialize Control-Plane
  ansible.builtin.file:
    path: "/home/{{ user.name }}/.kube"
    state: directory
    mode: '0755'
    owner: "{{ user.name }}"
    group: "{{ user.group }}"

# kubeadm init --pod-network-cidr --cri-socket

# cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
# chown $(id -u):$(id -g) $HOME/.kube/config

# cilium-cli install
